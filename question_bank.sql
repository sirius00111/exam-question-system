-- MySQL dump 10.13  Distrib 8.0.35, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: sirius00111
-- ------------------------------------------------------
-- Server version	8.0.35

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `question_bank`
--

DROP TABLE IF EXISTS `question_bank`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `question_bank` (
  `uid` int NOT NULL AUTO_INCREMENT,
  `type` varchar(20) NOT NULL,
  `description` text NOT NULL,
  `options` json DEFAULT NULL,
  `answer` text NOT NULL,
  `explanation` text,
  `difficulty` tinyint DEFAULT '1',
  `tags` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`uid`)
) ENGINE=InnoDB AUTO_INCREMENT=180 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question_bank`
--

LOCK TABLES `question_bank` WRITE;
/*!40000 ALTER TABLE `question_bank` DISABLE KEYS */;
INSERT INTO `question_bank` VALUES (1,'single_choice','以下哪个是 Java 的基本数据类型？','{\"A\": \"String\", \"B\": \"Integer\", \"C\": \"int\", \"D\": \"BigDecimal\"}','C','int 是 Java 的基本数据类型，其余是引用类型。',1,'Java,基础','2025-06-07 16:25:31','2025-06-08 13:45:05'),(2,'single_choice','以下哪个选项是 Python 的关键字？','{\"A\": \"define\", \"B\": \"class\", \"C\": \"function\", \"D\": \"method\"}','B','class 是 Python 中定义类的关键字。',1,'Python,关键字,基础','2025-06-07 16:27:04','2025-06-07 16:27:04'),(3,'multiple_choice','以下哪些属于 HTTP 请求方法？','{\"A\": \"GET\", \"B\": \"POST\", \"C\": \"FETCH\", \"D\": \"PUT\"}','A,B,D','GET、POST 和 PUT 是常见的 HTTP 请求方法，FETCH 是 JavaScript 的 API。',2,'Web,HTTP,网络协议','2025-06-07 16:27:04','2025-06-08 12:24:17'),(4,'true_false','JavaScript 是一门静态类型语言。',NULL,'false','JavaScript 是动态类型语言，变量类型在运行时确定。',1,'JavaScript,基础,判断','2025-06-07 16:27:04','2025-06-07 16:27:04'),(5,'short_answer','请简述计算机中“内存”和“硬盘”的区别。',NULL,'内存是计算机运行程序时使用的临时存储空间，速度快但断电即失效；硬盘用于长期存储数据，速度慢但数据持久。','从存储方式、速度和数据持久性三方面理解。',3,'计算机基础,简答题','2025-06-07 16:27:04','2025-06-07 16:27:04'),(6,'single_choice','以下哪个是 Java 的基本数据类型？','{\"A\": \"String\", \"B\": \"Integer\", \"C\": \"int\", \"D\": \"BigDecimal\"}','C','int 是基本数据类型，其余为引用类型。',1,'Java,基础','2025-06-07 16:29:44','2025-06-07 16:29:44'),(7,'single_choice','HTML 中用于定义超链接的标签是？','{\"A\": \"<div>\", \"B\": \"<span>\", \"C\": \"<a>\", \"D\": \"<link>\"}','C','<a> 标签用于创建超链接。',1,'HTML,前端','2025-06-07 16:29:44','2025-06-07 16:29:44'),(8,'multiple_choice','以下哪些是常见的排序算法？','{\"A\": \"冒泡排序\", \"B\": \"快排\", \"C\": \"插入排序\", \"D\": \"回溯\"}','A,B,C','回溯不是排序算法。',2,'算法,排序','2025-06-07 16:29:44','2025-06-07 16:29:44'),(9,'true_false','Linux 是一个开源操作系统。',NULL,'true','Linux 是开源且免费使用的操作系统。',1,'操作系统,Linux','2025-06-07 16:29:44','2025-06-07 16:29:44'),(10,'short_answer','简述面向对象编程的三大特性。',NULL,'封装、继承、多态。','这三者是面向对象设计的核心思想。',2,'编程,面向对象','2025-06-07 16:29:44','2025-06-09 13:46:19'),(11,'single_choice','下列哪一项是 Python 中定义函数的关键字？','{\"A\": \"def\", \"B\": \"function\", \"C\": \"func\", \"D\": \"define\"}','A','Python 中用 def 定义函数。',1,'Python,函数','2025-06-07 16:29:44','2025-06-07 16:29:44'),(12,'single_choice','C 语言中，以下哪个符号用于取地址？','{\"A\": \"*\", \"B\": \"#\", \"C\": \"&\", \"D\": \"%\"}','C','& 是取地址运算符。',2,'C语言,指针','2025-06-07 16:29:44','2025-06-07 16:29:44'),(13,'multiple_choice','以下哪些语言运行在 JVM 上？','{\"A\": \"Java\", \"B\": \"Kotlin\", \"C\": \"C++\", \"D\": \"Scala\"}','A,B,D','C++ 并不运行在 JVM 上。',2,'Java,JVM','2025-06-07 16:29:44','2025-06-07 16:29:44'),(14,'true_false','SELECT 是用于查询数据的 SQL 语句。',NULL,'true','SELECT 用于从数据库中获取数据。',1,'SQL,数据库','2025-06-07 16:29:44','2025-06-07 16:29:44'),(15,'short_answer','简述 TCP 与 UDP 的区别。',NULL,'TCP 面向连接，可靠传输；UDP 无连接，速度快但不保证可靠性。','重点对比可靠性、连接方式和应用场景。',3,'网络,通信协议','2025-06-07 16:29:44','2025-06-07 16:29:44'),(16,'single_choice','二进制中，1010 的十进制表示为？','{\"A\": \"8\", \"B\": \"9\", \"C\": \"10\", \"D\": \"11\"}','C','1*8 + 0*4 + 1*2 + 0*1 = 10',1,'计算机基础,二进制','2025-06-07 16:29:44','2025-06-07 16:29:44'),(17,'multiple_choice','哪些属于 HTTP 状态码中的 4xx 错误？','{\"A\": \"400\", \"B\": \"401\", \"C\": \"500\", \"D\": \"404\"}','A,B,D','500 属于服务器端错误（5xx），其余为客户端错误。',2,'Web,HTTP','2025-06-07 16:29:44','2025-06-07 16:29:44'),(18,'true_false','一个类只能继承一个接口。',NULL,'false','Java 中一个类可以实现多个接口。',2,'Java,接口','2025-06-07 16:29:44','2025-06-07 16:29:44'),(19,'short_answer','简述数据库的三范式。',NULL,'1NF：字段不可再分；2NF：记录唯一，消除部分依赖；3NF：消除传递依赖。','理解数据库表结构的设计规范。',3,'数据库,范式','2025-06-07 16:29:44','2025-06-07 16:29:44'),(20,'single_choice','中国的首都是？','{\"A\": \"上海\", \"B\": \"北京\", \"C\": \"广州\", \"D\": \"西安\"}','B','北京是中国的首都。',1,'地理,常识','2025-06-07 16:29:44','2025-06-07 16:29:44'),(21,'multiple_choice','英语中哪些是情态动词？','{\"A\": \"can\", \"B\": \"must\", \"C\": \"will\", \"D\": \"have\"}','A,B,C','can、must、will 是情态动词，have 是实义动词。',2,'英语,语法','2025-06-07 16:29:44','2025-06-08 13:46:13'),(22,'true_false','水的沸点是 90°C。',NULL,'false','水的沸点在标准大气压下是 100°C。',1,'科学,常识','2025-06-07 16:29:45','2025-06-07 16:29:45'),(23,'short_answer','请解释递归的概念。',NULL,'递归是函数自己调用自己，常用于解决可以被分解为子问题的问题。','关键在于定义终止条件和递归关系。',2,'编程,递归','2025-06-07 16:29:45','2025-06-07 16:29:45'),(24,'single_choice','以下哪项是 MySQL 的默认端口号？','{\"A\": \"3306\", \"B\": \"1433\", \"C\": \"1521\", \"D\": \"8080\"}','A','3306 是 MySQL 默认端口。',1,'MySQL,数据库','2025-06-07 16:29:45','2025-06-07 16:29:45'),(25,'true_false','CSS 是编程语言。',NULL,'false','CSS 是样式描述语言，不具备编程能力。',1,'前端,CSS','2025-06-07 16:29:45','2025-06-07 16:29:45'),(26,'single_choice','以下哪个角色不是Ave Mujica乐队中的成员？','{\"A\": \"丰川祥子\", \"B\": \"若叶睦\", \"C\": \"墨提斯\", \"D\": \"三角初华\"}','D','三角初华是三角初音的妹妹，三角初音才是Ave Mujica乐队的成员，并且担任乐队主唱。墨提斯和若叶睦属于两个不同的人格，但她们都属于Ave Mujica的成员。该题考察学生对Ave Mujica剧情的深入理解，此题容易误选C。',3,'Ave Mujica','2025-06-08 14:17:19','2025-06-08 14:18:51'),(27,'multiple_choice','以下哪些角色是MyGO!!!!!乐队的成员？','{\"A\": \"千早爱音\", \"B\": \"长崎素世\", \"C\": \"椎名立希\", \"D\": \"高松灯\"}','A,B,C,D','千早爱音担任吉他手；长崎素世担任贝斯手；椎名立希担任贝斯手；高松灯担任主唱。她们都属于MyGO!!!!!乐队。',2,'MyGO!!!!!','2025-06-08 14:21:42','2025-06-08 14:21:42'),(28,'true_false','空条承太郎的替身是白金之星，并且白金之星拥有5A面板。',NULL,'true','该说法正确，题目来自于JOJO的奇妙冒险。',1,'JOJO的奇妙冒险','2025-06-08 14:24:11','2025-06-08 14:24:11'),(37,'single_choice','在关系数据库中，以下哪个选项用于唯一标识表中的每一行记录？','{\"A\": \"外键\", \"B\": \"主键\", \"C\": \"索引\", \"D\": \"视图\"}','B','主键（Primary Key）用于唯一标识表中的每一行记录，确保数据的唯一性和完整性。',2,'数据库','2025-06-09 15:19:59','2025-06-09 15:19:59'),(38,'single_choice','SQL中，以下哪个命令用于删除表中的数据，但保留表结构？','{\"A\": \"DROP TABLE\", \"B\": \"DELETE FROM\", \"C\": \"TRUNCATE TABLE\", \"D\": \"REMOVE TABLE\"}','B','DELETE FROM命令用于删除表中的数据，但保留表结构；DROP TABLE会删除整个表，包括结构和数据。',2,'数据库','2025-06-09 15:19:59','2025-06-09 15:19:59'),(41,'true_false','在监督学习中，训练数据必须包含标签。',NULL,'true','监督学习的特点就是训练数据中包含输入特征和对应的标签，模型通过学习这些标签来进行预测。',2,'机器学习','2025-06-09 15:25:26','2025-06-09 15:25:26'),(42,'true_false','K-means算法是一种监督学习算法。',NULL,'false','K-means是一种无监督学习算法，因为它不需要标签信息，而是通过聚类来发现数据中的结构。',2,'机器学习','2025-06-09 15:25:26','2025-06-09 15:25:26'),(43,'true_false','决策树算法可以用于分类和回归任务。',NULL,'true','决策树既可以用于分类任务（分类树），也可以用于回归任务（回归树）。',2,'机器学习','2025-06-09 15:25:26','2025-06-09 15:25:26'),(44,'true_false','过拟合是指模型在训练集上表现很好，但在测试集上表现较差的现象。',NULL,'true','过拟合是指模型过于复杂，记住了训练数据的噪声和细节，导致泛化能力下降，在测试集上表现不佳。',2,'机器学习','2025-06-09 15:25:26','2025-06-09 15:25:26'),(45,'true_false','PCA（主成分分析）是一种有监督的降维方法。',NULL,'false','PCA是一种无监督的降维方法，它通过最大化数据的方差来找到主要成分，而不需要标签信息。',2,'机器学习','2025-06-09 15:25:26','2025-06-09 15:25:26'),(46,'multiple_choice','《红楼梦》中，贾宝玉的“通灵宝玉”上刻有哪些字样？','{\"A\": \"莫失莫忘\", \"B\": \"仙寿恒昌\", \"C\": \"不离不弃\", \"D\": \"芳龄永继\"}','A,B,D','贾宝玉的通灵宝玉上刻有“莫失莫忘，仙寿恒昌”和“不离不弃，芳龄永继”字样，但选项中只有A、B、D是正确的。',3,'红楼梦','2025-06-09 17:35:18','2025-06-09 18:08:49'),(47,'multiple_choice','下列哪些人物是《红楼梦》中“金陵十二钗”正册中的成员？','{\"A\": \"林黛玉\", \"B\": \"薛宝钗\", \"C\": \"史湘云\", \"D\": \"贾探春\"}','A,B,C,D','林黛玉、薛宝钗、史湘云和贾探春都是“金陵十二钗”正册中的成员。',3,'红楼梦','2025-06-09 17:35:18','2025-06-09 18:08:49'),(48,'multiple_choice','《红楼梦》中，贾府的四大家族除了贾家外，还包括哪些家族？','{\"A\": \"王家\", \"B\": \"史家\", \"C\": \"薛家\", \"D\": \"甄家\"}','A,B,C','贾府的四大家族包括贾家、王家、史家和薛家，甄家不属于四大家族。',3,'红楼梦','2025-06-09 17:35:18','2025-06-09 18:08:49'),(49,'multiple_choice','下列哪些情节与林黛玉直接相关？','{\"A\": \"葬花\", \"B\": \"撕扇子\", \"C\": \"焚稿断痴情\", \"D\": \"醉卧芍药裀\"}','A,C','“葬花”和“焚稿断痴情”是林黛玉的经典情节，“撕扇子”是晴雯的情节，“醉卧芍药裀”是史湘云的情节。',3,'红楼梦','2025-06-09 17:35:18','2025-06-09 18:08:49'),(50,'multiple_choice','《红楼梦》中，贾宝玉的“女儿是水做的骨肉”这一观点体现在他对哪些人物的态度上？','{\"A\": \"林黛玉\", \"B\": \"薛宝钗\", \"C\": \"晴雯\", \"D\": \"袭人\"}','A,B,C,D','贾宝玉对林黛玉、薛宝钗、晴雯和袭人都有深厚的感情，体现了他“女儿是水做的骨肉”的观点。',3,'红楼梦','2025-06-09 17:35:18','2025-06-09 18:08:49'),(51,'multiple_choice','以下哪些人物是蜀汉的五虎上将？','{\"A\": \"关羽\", \"B\": \"张飞\", \"C\": \"赵云\", \"D\": \"黄忠\"}','A,B,C,D','蜀汉的五虎上将包括关羽、张飞、赵云、马超和黄忠。',2,'三国','2025-06-09 17:58:39','2025-06-09 18:09:03'),(52,'multiple_choice','以下哪些人物是曹操的谋士？','{\"A\": \"郭嘉\", \"B\": \"荀彧\", \"C\": \"诸葛亮\", \"D\": \"司马懿\"}','A,B,D','郭嘉、荀彧和司马懿都是曹操的重要谋士，而诸葛亮是刘备的谋士。',2,'三国','2025-06-09 17:58:39','2025-06-09 18:09:03'),(53,'multiple_choice','下列哪些城市曾是三国时期的重要都城？','{\"A\": \"洛阳\", \"B\": \"成都\", \"C\": \"建业\", \"D\": \"长安\"}','A,B,C,D','洛阳是曹魏的都城，成都是蜀汉的都城，建业是东吴的都城，长安在西晋时期也曾是都城。',2,'三国','2025-06-09 17:58:39','2025-06-09 18:09:03'),(54,'multiple_choice','以下哪些事件与诸葛亮有关？','{\"A\": \"草船借箭\", \"B\": \"七擒孟获\", \"C\": \"空城计\", \"D\": \"火烧赤壁\"}','A,B,C','草船借箭、七擒孟获和空城计都是诸葛亮的著名事迹，而火烧赤壁主要是周瑜的计策。',2,'三国','2025-06-09 17:58:39','2025-06-09 18:09:03'),(55,'multiple_choice','在计算机组成原理中，关于流水线技术的描述，以下哪些是正确的？','{\"A\": \"流水线技术可以提高指令的吞吐量\", \"B\": \"流水线技术可以缩短单条指令的执行时间\", \"C\": \"流水线技术会增加硬件资源的开销\", \"D\": \"流水线技术可以完全消除数据冲突\"}','A,C','流水线技术通过并行处理多条指令的不同阶段来提高吞吐量（A正确），但并不能缩短单条指令的执行时间（B错误）。流水线需要额外的硬件资源来支持并行处理（C正确）。数据冲突（如数据冒险）无法完全消除，但可以通过旁路或停顿等技术来缓解（D错误）。',3,'计算机组成原理','2025-06-09 18:06:46','2025-06-09 18:09:03'),(56,'multiple_choice','关于Cache的替换算法，以下哪些算法在实际应用中被广泛采用？','{\"A\": \"随机替换算法（RAND）\", \"B\": \"先进先出算法（FIFO）\", \"C\": \"最近最少使用算法（LRU）\", \"D\": \"最不经常使用算法（LFU）\"}','C,D','LRU（最近最少使用）和LFU（最不经常使用）是实际中广泛使用的Cache替换算法，因为它们能较好地反映程序的局部性原理（C、D正确）。RAND和FIFO虽然简单，但命中率较低，通常不用于高性能场景（A、B错误）。',3,'计算机组成原理','2025-06-09 18:06:46','2025-06-09 18:09:02'),(57,'multiple_choice','下列哪些现象会导致流水线冲突？','{\"A\": \"数据冒险\", \"B\": \"结构冒险\", \"C\": \"控制冒险\", \"D\": \"指令预取失败\"}','A,B,C','数据冒险（A）、结构冒险（B）和控制冒险（C）是流水线的三种主要冲突类型。指令预取失败可能影响性能，但不属于流水线冲突的典型分类（D错误）。',3,'计算机组成原理','2025-06-09 18:06:46','2025-06-09 18:09:02'),(58,'multiple_choice','关于虚拟存储器的描述，以下哪些是正确的？','{\"A\": \"虚拟存储器通过页表实现地址转换\", \"B\": \"TLB（快表）用于加速虚拟地址到物理地址的转换\", \"C\": \"虚拟存储器的大小受限于物理内存容量\", \"D\": \"缺页中断会触发操作系统进行页面调度\"}','A,B,D','虚拟存储器通过页表（A正确）和TLB（B正确）管理地址转换，缺页中断由操作系统处理（D正确）。虚拟存储器的大小由地址总线位数决定，而非物理内存容量（C错误）。',3,'计算机组成原理','2025-06-09 18:06:46','2025-06-09 18:09:02'),(59,'multiple_choice','在指令集架构（ISA）中，以下哪些属于RISC（精简指令集）的特点？','{\"A\": \"指令长度固定\", \"B\": \"大量使用复杂寻址方式\", \"C\": \"采用Load/Store架构\", \"D\": \"指令执行周期数差异较大\"}','A,C','RISC的特点包括指令长度固定（A正确）、Load/Store架构（C正确）。复杂寻址方式和可变执行周期是CISC的特点（B、D错误）。',3,'计算机组成原理','2025-06-09 18:06:46','2025-06-09 18:09:02'),(60,'true_false','UDP协议在传输数据时，可以保证数据的可靠性和顺序性。',NULL,'false','UDP是一种无连接的协议，不提供数据的可靠性和顺序性保证。',3,'UDP','2025-06-09 18:10:26','2025-06-09 18:10:26'),(61,'true_false','UDP协议的首部长度是固定的8字节。',NULL,'true','UDP首部包含源端口、目的端口、长度和校验和四个字段，每个字段占2字节，总共8字节。',3,'UDP','2025-06-09 18:10:26','2025-06-09 18:10:26'),(62,'true_false','UDP协议支持多播和广播通信。',NULL,'true','UDP协议可以用于单播、多播和广播通信，这是其与TCP协议的一个重要区别。',3,'UDP','2025-06-09 18:10:26','2025-06-09 18:10:26'),(63,'true_false','UDP协议在传输数据时，会自动进行流量控制和拥塞控制。',NULL,'false','UDP协议不提供流量控制和拥塞控制机制，这些功能需要由应用层自行实现。',3,'UDP','2025-06-09 18:10:26','2025-06-09 18:10:26'),(64,'true_false','UDP协议的校验和字段是可选的，在某些情况下可以省略。',NULL,'true','UDP的校验和字段是可选的，如果发送方不计算校验和，则该字段可以置为0。但在实际应用中，通常建议启用校验和以确保数据的完整性。',3,'UDP','2025-06-09 18:10:26','2025-06-09 18:10:26'),(65,'short_answer','RIP协议中的最大跳数限制是多少？为什么设置这个限制？',NULL,'RIP协议的最大跳数限制是15跳。设置这个限制是为了防止路由环路和无限计数问题，超过15跳的路由被认为是不可达的。','RIP是一种距离向量路由协议，通过跳数来衡量路径的优劣。最大跳数限制可以避免网络中出现无限循环的路由信息，确保网络的稳定性。',3,'RIP协议','2025-06-09 18:11:37','2025-06-09 18:11:37'),(66,'short_answer','RIP协议中如何解决路由环路问题？请列举至少两种方法。',NULL,'RIP协议通过水平分割（Split Horizon）、毒性逆转（Poison Reverse）和触发更新（Triggered Updates）等方法解决路由环路问题。','水平分割防止路由器将从一个接口学到的路由信息再从该接口发送出去；毒性逆转则是通过将不可达路由的跳数设置为16（不可达）来通知邻居路由器；触发更新可以在网络拓扑变化时立即发送更新信息，而不是等待定期更新。',3,'RIP协议','2025-06-09 18:11:37','2025-06-09 18:11:37'),(67,'short_answer','RIP协议中定期发送路由更新的时间间隔是多少？这种机制有什么缺点？',NULL,'RIP协议默认每30秒发送一次路由更新。这种机制的缺点是可能导致网络带宽的浪费，并且在网络拓扑变化时收敛速度较慢。','定期更新机制虽然简单，但在稳定的网络中会发送大量冗余信息，占用带宽；而在网络拓扑变化时，可能需要多个更新周期才能收敛，导致路由信息不一致。',3,'RIP协议','2025-06-09 18:11:37','2025-06-09 18:11:37'),(68,'short_answer','RIP协议支持哪些类型的认证？并简要说明其作用。',NULL,'RIP协议支持明文认证和MD5认证。认证的作用是防止未经授权的路由器参与路由信息的交换，增强网络的安全性。','明文认证通过简单的密码验证，但安全性较低；MD5认证则通过哈希算法加密密码，提供更高的安全性，防止路由信息被篡改或伪造。',3,'RIP协议','2025-06-09 18:11:37','2025-06-09 18:11:37'),(69,'short_answer','RIP协议中如何区分版本1和版本2？版本2相对于版本1有哪些改进？',NULL,'RIP版本1是有类路由协议，不支持VLSM和认证，使用广播发送更新；RIP版本2是无类路由协议，支持VLSM、认证和组播更新。','RIP版本2通过支持无类寻址（CIDR）和可变长子网掩码（VLSM）提高了地址利用率；认证功能增强了安全性；组播更新（224.0.0.9）减少了网络中的广播流量。',3,'RIP协议','2025-06-09 18:11:37','2025-06-09 18:11:37'),(70,'single_choice','MyGO乐队的主唱是谁？','{\"A\": \"高松灯\", \"B\": \"椎名立希\", \"C\": \"长崎素世\", \"D\": \"千早爱音\"}','A','MyGO乐队的主唱是高松灯，她是乐队的核心成员之一。',2,'MyGO','2025-06-09 19:20:13','2025-06-09 19:20:13'),(71,'single_choice','MyGO乐队的哪首歌曲是动画《BanG Dream! It\'s MyGO!!!!!》的主题曲？','{\"A\": \"迷星叫\", \"B\": \"影色舞\", \"C\": \"壱雫空\", \"D\": \"詩超絆\"}','A','《迷星叫》是动画《BanG Dream! It\'s MyGO!!!!!》的主题曲，由MyGO乐队演唱。',2,'MyGO','2025-06-09 19:20:13','2025-06-09 19:20:13'),(72,'single_choice','MyGO乐队的贝斯手是谁？','{\"A\": \"高松灯\", \"B\": \"椎名立希\", \"C\": \"长崎素世\", \"D\": \"千早爱音\"}','C','长崎素世是MyGO乐队的贝斯手，她在乐队中负责低音部分。',2,'MyGO','2025-06-09 19:20:13','2025-06-09 19:20:13'),(73,'single_choice','MyGO乐队最初是由哪支乐队的成员组成的？','{\"A\": \"Roselia\", \"B\": \"Afterglow\", \"C\": \"Pastel＊Palettes\", \"D\": \"CRYCHIC\"}','D','MyGO乐队最初是由CRYCHIC乐队的成员重组而成，经历了成员变动后形成了现在的阵容。',2,'MyGO','2025-06-09 19:20:13','2025-06-09 19:20:13'),(74,'single_choice','MyGO乐队的鼓手是谁？','{\"A\": \"高松灯\", \"B\": \"椎名立希\", \"C\": \"长崎素世\", \"D\": \"千早爱音\"}','B','椎名立希是MyGO乐队的鼓手，她在乐队中负责节奏部分。',2,'MyGO','2025-06-09 19:20:13','2025-06-09 19:20:13'),(75,'single_choice','Ave Mujica是哪个动漫中的角色？','{\"A\": \"《BanG Dream!》\", \"B\": \"《Love Live!》\", \"C\": \"《偶像大师》\", \"D\": \"《轻音少女》\"}','A','Ave Mujica是《BanG Dream!》中的角色，属于该系列中的一支乐队。',2,'Ave Mujica','2025-06-09 23:36:53','2025-06-09 23:36:53'),(76,'single_choice','Ave Mujica乐队的音乐风格主要偏向哪种类型？','{\"A\": \"流行\", \"B\": \"摇滚\", \"C\": \"电子\", \"D\": \"古典\"}','B','Ave Mujica的音乐风格以摇滚为主，带有强烈的节奏感和力量感。',2,'Ave Mujica','2025-06-09 23:36:53','2025-06-09 23:36:53'),(77,'single_choice','Ave Mujica的乐队成员共有几人？','{\"A\": \"3\", \"B\": \"4\", \"C\": \"5\", \"D\": \"6\"}','C','Ave Mujica乐队由5名成员组成，分别是主唱、吉他手、贝斯手、鼓手和键盘手。',2,'Ave Mujica','2025-06-09 23:36:53','2025-06-09 23:36:53'),(78,'single_choice','Ave Mujica的首次亮相是在哪一年？','{\"A\": \"2018\", \"B\": \"2019\", \"C\": \"2020\", \"D\": \"2021\"}','D','Ave Mujica首次亮相是在2021年，作为《BanG Dream!》的新增乐队之一。',2,'Ave Mujica','2025-06-09 23:36:53','2025-06-09 23:36:53'),(79,'single_choice','Ave Mujica的乐队名称来源于哪种语言？','{\"A\": \"英语\", \"B\": \"拉丁语\", \"C\": \"法语\", \"D\": \"德语\"}','B','Ave Mujica的名称来源于拉丁语，意为“万福，Mujica”，带有宗教和古典的意味。',2,'Ave Mujica','2025-06-09 23:36:53','2025-06-09 23:36:53'),(80,'short_answer','空条承太郎的替身『白金之星』在第三部《星尘斗士》中首次觉醒时，其能力表现出了哪两种主要特性？',NULL,'超强的力量和精准度，以及时间停止能力','白金之星最初展现的是其无与伦比的力量和精准度，能够轻易击碎钻石。在后期与DIO的战斗中，承太郎觉醒了时间停止的能力，这是其替身的另一主要特性。',3,'空条承太郎','2025-06-09 23:43:54','2025-06-09 23:43:54'),(81,'short_answer','在《星尘斗士》的最终战中，空条承太郎是如何利用DIO的轻敌心理取得胜利的？',NULL,'假装被DIO的『世界』能力完全压制，实际上隐藏了自己也能短暂停止时间的能力','承太郎在战斗中故意表现出无法反抗DIO的时间停止，诱使DIO过于自信地接近他。当DIO以为胜券在握时，承太郎突然发动时间停止能力，出其不意地反击并最终击败DIO。',3,'空条承太郎','2025-06-09 23:43:54','2025-06-09 23:43:54'),(82,'short_answer','空条承太郎在第四部《不灭钻石》中，其替身『白金之星』新增了什么能力？这一能力在剧情中起到了什么关键作用？',NULL,'新增了『白金之星·世界』的远程精密动作能力，关键作用是远程解除吉良吉影的『杀手皇后』炸弹','在第四部中，白金之星获得了在时间停止范围内进行远程精密动作的能力。这一能力在最终战中至关重要，承太郎利用它远程解除了被吉良吉影变成炸弹的救护车，救了东方仗助等人。',3,'空条承太郎','2025-06-09 23:43:54','2025-06-09 23:43:54'),(83,'short_answer','空条承太郎在第六部《石之海》中，为了拯救女儿徐伦做出了什么重大牺牲？这一决定对后续剧情产生了什么影响？',NULL,'牺牲自己让天气预报的记忆光碟植入自己大脑，导致被普奇神父杀死。这一牺牲暂时阻止了天堂计划的完成，为徐伦等人争取了时间','承太郎为获取对抗普奇神父的情报，主动让天气预报的危险记忆光碟植入自己大脑，结果被神父趁机杀死。他的牺牲延缓了神父的天堂计划，虽然最终未能阻止新世界的诞生，但展现了其作为父亲和保护者的决心。',3,'空条承太郎','2025-06-09 23:43:54','2025-06-09 23:43:54'),(84,'short_answer','空条承太郎的『白金之星』的时间停止能力与其他时间系替身（如DIO的『世界』）相比有什么独特之处？',NULL,'白金之星的时间停止持续时间会随着承太郎的成长而延长，且停止期间能活动的帧数更多','与DIO的世界固定5秒的时间停止不同，白金之星的时间停止从最初的0.5秒逐渐成长到5秒。此外，白金之星在停止时间内能活动的帧数（行动自由度）比世界更多，这使得承太郎在时停对战中具有优势。',3,'空条承太郎','2025-06-09 23:43:54','2025-06-09 23:43:54'),(85,'true_false','吉良吉影是《JOJO的奇妙冒险》第四部的主要反派角色。',NULL,'true','吉良吉影是《JOJO的奇妙冒险》第四部《不灭钻石》的主要反派，他是一名连环杀手，拥有替身‘杀手皇后’。',2,'吉良吉影','2025-06-10 22:53:54','2025-06-10 22:53:54'),(86,'true_false','吉良吉影的替身‘杀手皇后’可以引爆任何他触摸过的物体。',NULL,'true','吉良吉影的替身‘杀手皇后’的第一能力是将触摸过的物体变成炸弹，并在引爆时造成巨大破坏。',2,'吉良吉影','2025-06-10 22:53:54','2025-06-10 22:53:54'),(87,'true_false','吉良吉影的真实身份在故事一开始就被主角东方仗助识破了。',NULL,'false','吉良吉影的真实身份在故事中后期才被揭露，他通过伪装和谨慎的行动隐藏了自己的身份。',2,'吉良吉影','2025-06-10 22:53:54','2025-06-10 22:53:54'),(88,'true_false','吉良吉影的替身‘杀手皇后’拥有时间停止的能力。',NULL,'false','吉良吉影的替身‘杀手皇后’不具备时间停止的能力，它的主要能力是制造炸弹和引爆物体。',2,'吉良吉影','2025-06-10 22:53:54','2025-06-10 22:53:54'),(89,'true_false','吉良吉影最终被主角团击败并死亡。',NULL,'true','在故事的最终决战中，吉良吉影被东方仗助和广濑康一等人击败，最终死亡。',2,'吉良吉影','2025-06-10 22:53:54','2025-06-10 22:53:54'),(90,'multiple_choice','在Gson中，以下哪个方法可以将JSON字符串转换为Java对象？','{\"A\": \"fromJson()\", \"B\": \"toJson()\", \"C\": \"parseJson()\", \"D\": \"convertJson()\"}','A','Gson的fromJson()方法用于将JSON字符串转换为Java对象。',2,'gson','2025-06-13 16:40:08','2025-06-13 16:40:08'),(91,'multiple_choice','Gson中，以下哪些注解可以用于自定义字段的序列化和反序列化？','{\"A\": \"@SerializedName\", \"B\": \"@Expose\", \"C\": \"@JsonAdapter\", \"D\": \"@Since\"}','A,B,C','@SerializedName用于指定JSON字段名，@Expose用于控制字段是否参与序列化或反序列化，@JsonAdapter用于指定自定义的适配器。@Since用于版本控制，不直接用于自定义序列化。',2,'gson','2025-06-13 16:40:08','2025-06-13 16:40:08'),(92,'multiple_choice','以下关于Gson的说法中，哪些是正确的？','{\"A\": \"Gson是Google开发的一个Java库\", \"B\": \"Gson只能处理简单的JSON数据\", \"C\": \"Gson支持泛型的序列化和反序列化\", \"D\": \"Gson不能处理日期格式\"}','A,C','Gson是Google开发的Java库，支持泛型的序列化和反序列化。Gson可以处理复杂的JSON数据，并且可以通过自定义适配器处理日期格式。',2,'gson','2025-06-13 16:40:08','2025-06-13 16:40:08'),(93,'multiple_choice','在Gson中，以下哪些方法可以用于创建Gson实例？','{\"A\": \"new Gson()\", \"B\": \"GsonBuilder().create()\", \"C\": \"GsonFactory.create()\", \"D\": \"Gson.getInstance()\"}','A,B','可以通过new Gson()直接创建实例，或者使用GsonBuilder进行配置后调用create()方法创建。Gson没有GsonFactory或getInstance()方法。',2,'gson','2025-06-13 16:40:08','2025-06-13 16:40:08'),(94,'multiple_choice','以下哪些是GsonBuilder提供的配置选项？','{\"A\": \"setPrettyPrinting()\", \"B\": \"excludeFieldsWithoutExposeAnnotation()\", \"C\": \"registerTypeAdapter()\", \"D\": \"setDateFormat()\"}','A,B,C,D','GsonBuilder提供了多种配置选项，包括美化输出(setPrettyPrinting)、排除未标记@Expose的字段(excludeFieldsWithoutExposeAnnotation)、注册类型适配器(registerTypeAdapter)和设置日期格式(setDateFormat)。',2,'gson','2025-06-13 16:40:08','2025-06-13 16:40:08'),(95,'true_false','唐僧取经的目的是为了学习西方的先进技术。',NULL,'false','唐僧取经的目的是为了取得真经，弘扬佛法，普度众生，而非学习技术。',2,'西游记','2025-06-13 17:58:19','2025-06-13 17:58:19'),(96,'true_false','猪八戒原本是天上的天蓬元帅。',NULL,'true','猪八戒因调戏嫦娥被贬下凡间，投胎为猪妖，之前是天上的天蓬元帅。',2,'西游记','2025-06-13 17:58:19','2025-06-13 17:58:19'),(97,'true_false','沙僧在取经团队中的武器是九齿钉耙。',NULL,'false','沙僧的武器是降妖宝杖，九齿钉耙是猪八戒的武器。',2,'西游记','2025-06-13 17:58:19','2025-06-13 17:58:19'),(98,'true_false','《西游记》中，白骨精是唯一一个没有后台的妖怪。',NULL,'true','白骨精是少数没有神仙或佛菩萨作为后台的妖怪之一，完全靠自己修炼成精。',2,'西游记','2025-06-13 17:58:19','2025-06-13 17:58:19'),(99,'true_false','《西游记》中，孙悟空是从石头里蹦出来的。',NULL,'true','孙悟空是从花果山的一块仙石中孕育而生的。',2,'西游记','2025-06-13 17:58:19','2025-06-13 17:58:19'),(100,'short_answer','UDP协议的主要特点是什么？',NULL,'UDP协议的主要特点包括无连接、不可靠、面向报文、没有拥塞控制、支持一对一、一对多、多对一和多对多的交互通信。','UDP（用户数据报协议）是一种无连接的传输层协议，它不保证数据包的顺序、可靠性或完整性，但具有较低的延迟和开销，适用于实时应用如视频流和在线游戏。',2,'udp','2025-06-20 14:43:51','2025-06-20 14:43:51'),(101,'short_answer','UDP和TCP的主要区别有哪些？',NULL,'UDP和TCP的主要区别包括：UDP是无连接的，TCP是面向连接的；UDP不保证可靠传输，TCP保证可靠传输；UDP没有流量控制和拥塞控制，TCP有；UDP头部开销小（8字节），TCP头部开销大（20字节）。','TCP提供可靠的、面向连接的服务，适合需要高可靠性的应用如网页浏览和文件传输；而UDP提供无连接、不可靠的服务，适合实时性要求高的应用如语音和视频通话。',2,'udp','2025-06-20 14:43:51','2025-06-20 14:43:51'),(102,'short_answer','UDP的头部包含哪些字段？',NULL,'UDP头部包含四个字段：源端口号（2字节）、目的端口号（2字节）、长度（2字节）和校验和（2字节）。','UDP头部结构简单，源端口和目的端口用于标识通信的应用程序，长度字段表示UDP数据报的总长度（包括头部和数据），校验和用于检测数据传输中的错误。',2,'udp','2025-06-20 14:43:51','2025-06-20 14:43:51'),(103,'short_answer','为什么DNS通常使用UDP协议？',NULL,'DNS通常使用UDP协议是因为DNS查询通常是短小的请求和响应，UDP的无连接和低开销特性能够提供更快的响应速度，而且大多数DNS查询可以在一个UDP数据包中完成。','UDP的快速和简单特性非常适合DNS查询这种小型、频繁的通信。只有在响应数据过大（超过512字节）时，DNS才会切换到TCP协议。',2,'udp','2025-06-20 14:43:51','2025-06-20 14:43:51'),(104,'short_answer','UDP的校验和字段有什么作用？',NULL,'UDP的校验和字段用于检测UDP数据报在传输过程中是否发生了错误（如比特翻转）。发送方计算校验和并填入头部，接收方重新计算校验和并与收到的校验和对比，如果不一致则丢弃该数据报。','校验和是一种简单的错误检测机制，虽然UDP不保证可靠传输，但校验和可以帮助接收方发现传输中的错误，提高数据的完整性。',2,'udp','2025-06-20 14:43:51','2025-06-20 14:43:51'),(105,'multiple_choice','HTTP协议中，以下哪些请求方法是安全的（即不会对服务器资源产生修改）？','{\"A\": \"GET\", \"B\": \"POST\", \"C\": \"PUT\", \"D\": \"HEAD\"}','A,D','GET和HEAD方法是安全的，它们仅用于获取资源信息，不会对服务器资源产生修改。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(106,'multiple_choice','HTTP响应状态码中，哪些表示客户端错误？','{\"A\": \"200\", \"B\": \"400\", \"C\": \"404\", \"D\": \"500\"}','B,C','400和404是客户端错误状态码，分别表示请求错误和资源未找到。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(107,'multiple_choice','以下哪些是HTTP/1.1的持久连接特性带来的优点？','{\"A\": \"减少TCP连接建立的开销\", \"B\": \"支持服务器推送\", \"C\": \"允许在一个连接上发送多个请求\", \"D\": \"减少网络延迟\"}','A,C,D','持久连接减少了TCP连接建立的开销，允许在一个连接上发送多个请求，从而减少网络延迟。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(108,'multiple_choice','HTTP请求头中，以下哪些字段与缓存相关？','{\"A\": \"User-Agent\", \"B\": \"Cache-Control\", \"C\": \"Expires\", \"D\": \"Accept-Encoding\"}','B,C','Cache-Control和Expires是HTTP头中用于控制缓存的字段。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(109,'multiple_choice','HTTP/2相比HTTP/1.1的主要改进包括哪些？','{\"A\": \"二进制协议\", \"B\": \"多路复用\", \"C\": \"头部压缩\", \"D\": \"持久连接\"}','A,B,C','HTTP/2引入了二进制协议、多路复用和头部压缩等改进，持久连接是HTTP/1.1的特性。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(110,'multiple_choice','以下哪些HTTP方法是非幂等的？','{\"A\": \"GET\", \"B\": \"POST\", \"C\": \"PUT\", \"D\": \"DELETE\"}','B','POST方法是非幂等的，多次调用可能会产生不同的结果。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(111,'multiple_choice','HTTP协议中，以下哪些状态码表示重定向？','{\"A\": \"301\", \"B\": \"302\", \"C\": \"403\", \"D\": \"304\"}','A,B','301和302是重定向状态码，分别表示永久重定向和临时重定向。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(112,'multiple_choice','以下哪些是HTTPS协议的特点？','{\"A\": \"使用SSL/TLS加密\", \"B\": \"默认端口是443\", \"C\": \"比HTTP更快\", \"D\": \"不需要证书\"}','A,B','HTTPS使用SSL/TLS加密，默认端口是443，但通常比HTTP稍慢且需要证书。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(113,'multiple_choice','HTTP请求中，以下哪些头部字段用于内容协商？','{\"A\": \"Accept\", \"B\": \"Content-Type\", \"C\": \"Accept-Language\", \"D\": \"User-Agent\"}','A,C','Accept和Accept-Language用于客户端和服务器之间的内容协商。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(114,'multiple_choice','以下哪些是HTTP无状态特性的解决方案？','{\"A\": \"Cookie\", \"B\": \"Session\", \"C\": \"Token\", \"D\": \"ETag\"}','A,B,C','Cookie、Session和Token都是用于解决HTTP无状态特性的技术。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(115,'multiple_choice','HTTP协议中，以下哪些方法支持请求体（Request Body）？','{\"A\": \"GET\", \"B\": \"POST\", \"C\": \"PUT\", \"D\": \"DELETE\"}','B,C','POST和PUT方法支持请求体，用于发送数据到服务器。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(116,'multiple_choice','以下哪些HTTP头部字段与安全相关？','{\"A\": \"Content-Security-Policy\", \"B\": \"X-Frame-Options\", \"C\": \"Referer\", \"D\": \"Host\"}','A,B','Content-Security-Policy和X-Frame-Options是用于增强安全性的HTTP头部字段。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(117,'multiple_choice','HTTP协议中，以下哪些状态码表示服务器错误？','{\"A\": \"500\", \"B\": \"502\", \"C\": \"503\", \"D\": \"504\"}','A,B,C,D','500、502、503和504都是服务器错误状态码。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(118,'multiple_choice','以下哪些是HTTP请求的组成部分？','{\"A\": \"请求行\", \"B\": \"请求头\", \"C\": \"请求体\", \"D\": \"状态行\"}','A,B,C','HTTP请求由请求行、请求头和请求体组成，状态行是响应的组成部分。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(119,'multiple_choice','HTTP协议中，以下哪些是常见的媒体类型（MIME Type）？','{\"A\": \"text/html\", \"B\": \"application/json\", \"C\": \"image/png\", \"D\": \"video/mp4\"}','A,B,C,D','这些都是HTTP协议中常见的媒体类型。',2,'http协议','2025-06-20 15:04:23','2025-06-20 15:04:23'),(120,'multiple_choice','在DNS协议中，以下哪些记录类型用于邮件交换？','{\"A\": \"A记录\", \"B\": \"MX记录\", \"C\": \"CNAME记录\", \"D\": \"TXT记录\"}','B','MX记录（Mail Exchange）用于指定处理电子邮件的邮件服务器。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(121,'multiple_choice','DNS查询类型中，递归查询和迭代查询的主要区别是什么？','{\"A\": \"递归查询由客户端发起，迭代查询由服务器发起\", \"B\": \"递归查询要求服务器返回最终结果，迭代查询可能返回其他服务器的地址\", \"C\": \"递归查询只用于IPv6，迭代查询只用于IPv4\", \"D\": \"递归查询使用UDP协议，迭代查询使用TCP协议\"}','B','递归查询要求DNS服务器返回最终的查询结果，而迭代查询可能返回其他DNS服务器的地址，由客户端继续查询。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(122,'multiple_choice','以下哪些是DNS安全扩展（DNSSEC）的主要功能？','{\"A\": \"防止DNS缓存污染\", \"B\": \"提供数据完整性验证\", \"C\": \"加密DNS查询内容\", \"D\": \"验证DNS响应来源的真实性\"}','B,D','DNSSEC通过数字签名提供数据完整性验证和响应来源的真实性验证，但它并不加密DNS查询内容。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(123,'multiple_choice','DNS协议中，以下哪些字段是DNS报文头部（Header）的组成部分？','{\"A\": \"QR（查询/响应）\", \"B\": \"Opcode（操作码）\", \"C\": \"RCODE（响应码）\", \"D\": \"TTL（生存时间）\"}','A,B,C','TTL是资源记录（RR）的字段，不属于DNS报文头部。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(124,'multiple_choice','关于DNS的ANY查询，以下哪些说法是正确的？','{\"A\": \"ANY查询会返回指定域名的所有记录类型\", \"B\": \"由于安全和性能问题，许多DNS服务器已禁用ANY查询\", \"C\": \"ANY查询是DNSSEC的必需功能\", \"D\": \"ANY查询只能通过TCP协议发送\"}','A,B','ANY查询会请求所有记录类型，但由于可能被滥用，许多服务器已禁用此功能。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(125,'multiple_choice','在DNS协议中，以下哪些机制可以用于负载均衡？','{\"A\": \"轮询DNS（Round Robin DNS）\", \"B\": \"DNS缓存\", \"C\": \"地理DNS（GeoDNS）\", \"D\": \"DNSSEC\"}','A,C','轮询DNS和地理DNS可以通过返回不同的IP地址实现负载均衡，而DNS缓存和DNSSEC与此无关。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(126,'multiple_choice','以下哪些是DNS over HTTPS（DoH）的特点？','{\"A\": \"使用HTTP/2协议传输DNS查询\", \"B\": \"默认使用443端口\", \"C\": \"提供端到端加密\", \"D\": \"完全替代了传统的DNS协议\"}','A,B','DoH通过HTTP/2传输DNS查询并使用443端口，但它并未完全替代传统DNS，且加密仅存在于客户端与DoH服务器之间。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(127,'multiple_choice','DNS协议中，以下哪些是资源记录（RR）的公共字段？','{\"A\": \"NAME\", \"B\": \"TYPE\", \"C\": \"CLASS\", \"D\": \"RDLENGTH\"}','A,B,C,D','所有选项都是资源记录的公共字段，分别表示域名、记录类型、类别和数据长度。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(128,'multiple_choice','关于DNS的CNAME记录，以下哪些说法是正确的？','{\"A\": \"CNAME记录可以将一个域名别名指向另一个域名\", \"B\": \"CNAME记录不能与其他记录类型（如MX记录）共存\", \"C\": \"CNAME记录的TTL值必须为0\", \"D\": \"CNAME记录可以指向IPv6地址\"}','A,B','CNAME记录用于别名解析，且与其他记录类型冲突。它不直接指向IP地址，TTL也可自定义。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(129,'multiple_choice','以下哪些攻击类型与DNS协议相关？','{\"A\": \"DNS放大攻击\", \"B\": \"DNS缓存投毒\", \"C\": \"SYN洪泛攻击\", \"D\": \"DNS隧道\"}','A,B,D','SYN洪泛是TCP层攻击，其他选项均为典型的DNS相关攻击。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(130,'multiple_choice','在DNS解析过程中，以下哪些是常见的超时设置？','{\"A\": \"解析器等待递归查询响应的超时\", \"B\": \"DNS缓存记录的TTL超时\", \"C\": \"TCP连接建立的超时\", \"D\": \"DNS-over-TLS握手超时\"}','A,B,D','TCP连接超时属于传输层，与DNS解析过程无直接关系。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(131,'multiple_choice','以下哪些DNS记录类型支持IPv6地址？','{\"A\": \"A记录\", \"B\": \"AAAA记录\", \"C\": \"PTR记录\", \"D\": \"NS记录\"}','B,C','AAAA记录存储IPv6地址，PTR记录可用于反向IPv6解析。A记录仅支持IPv4，NS记录与IP版本无关。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(132,'multiple_choice','关于DNS的权威服务器和递归服务器，以下哪些说法正确？','{\"A\": \"权威服务器直接管理域名的记录\", \"B\": \"递归服务器通常由ISP或公共DNS服务商提供\", \"C\": \"根DNS服务器属于递归服务器\", \"D\": \"权威服务器不处理递归查询\"}','A,B,D','根DNS服务器是权威服务器的一种，不提供递归查询服务。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(133,'multiple_choice','以下哪些技术可以用于隐藏DNS查询的真实目标？','{\"A\": \"DNS over HTTPS（DoH）\", \"B\": \"DNS查询名称最小化\", \"C\": \"DNSSEC\", \"D\": \"EDNS0\"}','A,B','DoH加密查询内容，查询名称最小化减少信息暴露。DNSSEC和EDNS0与隐私无关。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(134,'multiple_choice','在DNS协议中，以下哪些扩展机制（Extension Mechanisms）被广泛支持？','{\"A\": \"EDNS0\", \"B\": \"DNS over QUIC\", \"C\": \"TSIG（Transaction Signature）\", \"D\": \"DNS over TCP\"}','A,C','EDNS0和TSIG是广泛支持的扩展，而DNS over QUIC尚在推广中，TCP是基础协议非扩展机制。',3,'dns协议','2025-06-20 15:08:58','2025-06-20 15:08:58'),(135,'short_answer','TCP是什么的缩写？',NULL,'传输控制协议','TCP是Transmission Control Protocol的缩写，中文意思是传输控制协议。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(136,'short_answer','TCP协议位于OSI模型的哪一层？',NULL,'传输层','TCP协议工作在OSI模型的第四层，即传输层。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(137,'short_answer','TCP和UDP的主要区别是什么？',NULL,'TCP是面向连接的，UDP是无连接的','TCP在通信前需要建立连接，保证数据的可靠传输；UDP不需要建立连接，传输效率更高但不可靠。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(138,'short_answer','TCP的三次握手过程是为了什么？',NULL,'建立连接','三次握手是为了确保客户端和服务器都能正常收发数据，建立可靠的连接。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(139,'short_answer','TCP的流量控制是通过什么机制实现的？',NULL,'滑动窗口','滑动窗口机制可以动态调整发送方的发送速率，避免接收方处理不过来。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(140,'short_answer','TCP协议中，端口号的范围是多少？',NULL,'0-65535','TCP使用16位的端口号，因此范围是0到65535。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(141,'short_answer','TCP报头中的哪个字段用于标识不同的应用层协议？',NULL,'端口号','端口号用于标识不同的应用程序或服务。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(142,'short_answer','TCP协议中，FIN标志位的作用是什么？',NULL,'表示发送方没有数据要发送了，请求关闭连接','FIN标志位用于正常关闭TCP连接。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(143,'short_answer','TCP协议中，SYN标志位的作用是什么？',NULL,'用于建立连接时的同步序列号','SYN标志位在三次握手过程中用于同步序列号。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(144,'short_answer','TCP协议中，ACK标志位的作用是什么？',NULL,'确认收到的数据','ACK标志位表示确认号字段有效，确认收到了对方的数据。',1,'tcp','2025-06-20 15:09:54','2025-06-20 15:09:54'),(145,'true_false','DMA（直接内存访问）允许外设直接与内存进行数据交换，而不需要CPU的干预。',NULL,'true','DMA的主要功能就是允许外设直接与内存交换数据，减少CPU的负担。',1,'dma','2025-06-20 15:11:26','2025-06-20 15:11:26'),(146,'true_false','DMA控制器是CPU的一部分。',NULL,'false','DMA控制器是一个独立的硬件模块，不属于CPU的一部分。',1,'dma','2025-06-20 15:11:26','2025-06-20 15:11:26'),(147,'true_false','使用DMA传输数据时，CPU可以完全停止工作。',NULL,'false','虽然DMA减少了CPU的负担，但CPU仍然需要参与初始化和控制DMA传输的过程。',1,'dma','2025-06-20 15:11:26','2025-06-20 15:11:26'),(148,'true_false','DMA传输数据的速度比CPU直接传输数据要慢。',NULL,'false','DMA传输数据的速度通常比CPU直接传输要快，因为它减少了CPU的干预。',1,'dma','2025-06-20 15:11:26','2025-06-20 15:11:26'),(149,'true_false','DMA可以用于任何外设与内存之间的数据传输。',NULL,'true','只要外设支持DMA功能，就可以使用DMA进行数据传输。',1,'dma','2025-06-20 15:11:26','2025-06-20 15:11:26'),(150,'short_answer','什么是循环冗余检验码（CRC）？',NULL,'循环冗余检验码（CRC）是一种用于检测数据传输或存储过程中错误的校验码。','CRC通过将数据视为多项式并使用除法运算生成校验码，用于检测数据传输或存储中的错误。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(151,'short_answer','CRC校验码的主要用途是什么？',NULL,'CRC校验码主要用于检测数据传输或存储中的错误。','CRC校验码通过校验数据传输或存储的完整性，确保数据未被意外修改或损坏。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(152,'short_answer','CRC校验码是基于什么数学原理的？',NULL,'CRC校验码基于多项式除法原理。','CRC将数据视为二进制多项式，通过模2除法生成校验码。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(153,'short_answer','CRC校验码可以纠正错误吗？',NULL,'不可以，CRC校验码只能检测错误，不能纠正错误。','CRC主要用于错误检测，而非错误纠正，因为它只能识别数据是否被修改，无法定位具体错误位置。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(154,'short_answer','CRC校验码通常附加在数据的哪个位置？',NULL,'CRC校验码通常附加在数据的末尾。','CRC校验码计算完成后会附加到原始数据的末尾，以便接收方进行校验。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(155,'short_answer','CRC校验码的长度通常是固定的吗？',NULL,'是的，CRC校验码的长度通常是固定的，如8位、16位或32位。','CRC校验码的长度由生成多项式的位数决定，常见的长度包括8位、16位和32位。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(156,'short_answer','CRC校验码的计算需要什么参数？',NULL,'CRC校验码的计算需要一个生成多项式。','生成多项式是CRC计算的核心参数，决定了校验码的长度和性能。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(157,'short_answer','CRC校验码在哪些领域应用广泛？',NULL,'CRC校验码广泛应用于网络通信、存储设备（如硬盘、U盘）和文件传输等领域。','由于CRC高效且易于实现，它被广泛用于需要数据完整性的场景。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(158,'short_answer','CRC校验码的检测能力如何？',NULL,'CRC校验码可以检测大多数常见的错误，如单比特错误、双比特错误和奇数位错误。','CRC校验码的设计使其能够高效检测多种类型的错误，尤其是突发错误。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(159,'short_answer','CRC校验码的计算是单向的吗？',NULL,'是的，CRC校验码的计算是单向的，无法从校验码还原原始数据。','CRC仅用于错误检测，不提供数据还原功能，因此是单向的。',1,'循环冗余检验码','2025-06-20 15:13:26','2025-06-20 15:13:26'),(160,'single_choice','Gemini是什么？','{\"A\": \"一种星座\", \"B\": \"Google开发的多模态AI模型\", \"C\": \"一种编程语言\", \"D\": \"一种操作系统\"}','B','Gemini是Google开发的多模态AI模型，能够理解和生成文本、代码、音频、图像和视频等多种内容。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(161,'single_choice','Gemini可以处理以下哪种类型的数据？','{\"A\": \"仅文本\", \"B\": \"文本和图像\", \"C\": \"文本、图像、音频和视频\", \"D\": \"仅图像\"}','C','Gemini是多模态模型，能够处理文本、图像、音频和视频等多种数据类型。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(162,'single_choice','Gemini是由哪家公司开发的？','{\"A\": \"Microsoft\", \"B\": \"Google\", \"C\": \"OpenAI\", \"D\": \"Meta\"}','B','Gemini是由Google开发的AI模型。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(163,'single_choice','Gemini的主要竞争对手是？','{\"A\": \"GPT-4\", \"B\": \"Siri\", \"C\": \"Alexa\", \"D\": \"Bing\"}','A','Gemini的主要竞争对手是OpenAI的GPT-4，两者都是先进的多模态AI模型。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(164,'single_choice','Gemini可以用于以下哪种任务？','{\"A\": \"生成文本\", \"B\": \"图像识别\", \"C\": \"编写代码\", \"D\": \"以上所有\"}','D','Gemini可以用于生成文本、图像识别、编写代码等多种任务。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(165,'single_choice','Gemini的哪个版本专注于高效部署？','{\"A\": \"Gemini Ultra\", \"B\": \"Gemini Pro\", \"C\": \"Gemini Nano\", \"D\": \"Gemini Mini\"}','C','Gemini Nano是专为高效部署设计的轻量级版本。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(166,'single_choice','Gemini可以运行在以下哪种设备上？','{\"A\": \"仅服务器\", \"B\": \"智能手机\", \"C\": \"平板电脑\", \"D\": \"以上所有\"}','D','Gemini的不同版本可以运行在服务器、智能手机和平板电脑等多种设备上。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(167,'single_choice','Gemini的哪个版本性能最强？','{\"A\": \"Gemini Ultra\", \"B\": \"Gemini Pro\", \"C\": \"Gemini Nano\", \"D\": \"Gemini Lite\"}','A','Gemini Ultra是性能最强的版本，适用于高度复杂的任务。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(168,'single_choice','Gemini可以用于以下哪个应用场景？','{\"A\": \"客服聊天机器人\", \"B\": \"图像生成\", \"C\": \"语音识别\", \"D\": \"以上所有\"}','D','Gemini可以应用于客服聊天机器人、图像生成、语音识别等多种场景。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(169,'single_choice','Gemini支持以下哪种语言？','{\"A\": \"仅英语\", \"B\": \"英语和中文\", \"C\": \"多种语言\", \"D\": \"仅中文\"}','C','Gemini支持多种语言，包括但不限于英语和中文。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(170,'single_choice','Gemini的哪个版本适合开发者集成到应用中？','{\"A\": \"Gemini Ultra\", \"B\": \"Gemini Pro\", \"C\": \"Gemini Nano\", \"D\": \"Gemini Basic\"}','B','Gemini Pro适合开发者集成到各种应用中，平衡了性能和效率。',1,'gemini','2025-06-23 00:12:58','2025-06-23 00:12:58'),(175,'single_choice','DeepSeek是什么类型的模型？','{\"A\": \"图像生成模型\", \"B\": \"语言模型\", \"C\": \"语音识别模型\", \"D\": \"视频处理模型\"}','B','DeepSeek是一个专注于自然语言处理的语言模型。',1,'deepseek','2025-06-23 09:55:58','2025-06-23 09:55:58'),(176,'single_choice','DeepSeek的主要功能是什么？','{\"A\": \"生成图片\", \"B\": \"理解和生成文本\", \"C\": \"识别语音\", \"D\": \"处理视频\"}','B','DeepSeek主要用于理解和生成文本内容。',1,'deepseek','2025-06-23 09:55:58','2025-06-23 09:55:58'),(177,'single_choice','DeepSeek可以用于以下哪个场景？','{\"A\": \"自动驾驶\", \"B\": \"文本摘要\", \"C\": \"医学影像分析\", \"D\": \"音乐合成\"}','B','DeepSeek适用于文本相关的任务，如文本摘要。',1,'deepseek','2025-06-23 09:55:59','2025-06-23 09:55:59'),(178,'single_choice','DeepSeek是哪个公司开发的？','{\"A\": \"Google\", \"B\": \"DeepSeek\", \"C\": \"Microsoft\", \"D\": \"OpenAI\"}','B','DeepSeek是由DeepSeek公司开发的。',1,'deepseek','2025-06-23 09:55:59','2025-06-23 09:55:59'),(179,'single_choice','DeepSeek的输入和输出主要是什么形式？','{\"A\": \"图片\", \"B\": \"文本\", \"C\": \"音频\", \"D\": \"视频\"}','B','DeepSeek主要处理文本形式的输入和输出。',1,'deepseek','2025-06-23 09:55:59','2025-06-23 09:55:59');
/*!40000 ALTER TABLE `question_bank` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-06-24 13:42:01
